generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model managers {
  Id              Int      @id @default(autoincrement())
  UserId          Int?     @unique(map: "Managers_UserId_key") @db.UnsignedInt
  DeaconId        Int      @default(0) @db.SmallInt
  Email           String?  @unique(map: "Managers_Email_key") @db.VarChar(255)
  Google          String?  @unique(map: "Managers_Google_key") @db.VarChar(255)
  Line            String?  @unique(map: "Managers_Line_key") @db.VarChar(255)
  Password        String?  @db.VarChar(255)
  AuthorizeUserId Int      @db.UnsignedInt
  CreatedAt       DateTime @default(now())
  UpdateAt        DateTime @updatedAt
  IsActive        Boolean? @default(true)
}

model users {
  Id                Int       @id @default(autoincrement()) @db.UnsignedInt
  MobilePrefix      String?   @db.VarChar(5)
  Mobile            String?   @db.VarChar(20)
  Name              String?   @db.VarChar(50)
  DharmaName        String?   @db.VarChar(50)
  MageNickname      String?   @db.VarChar(50)
  LineId            String?   @db.VarChar(255)
  Email             String?   @db.VarChar(255)
  IsMonk            Boolean   @default(false)
  StayIdentity      Int?      @db.TinyInt
  IsMale            Boolean   @default(true)
  BirthDate         DateTime? @db.Date
  IdNumber          String?   @db.VarChar(10)
  PassportNumber    String?   @db.VarChar(20)
  BirthPlace        String?   @db.VarChar(10)
  Phone             String?   @db.VarChar(20)
  Ordination        String?   @db.VarChar(20)
  Altar             String?   @db.VarChar(20)
  ShavedMaster      String?   @db.VarChar(50)
  ShavedDate        DateTime? @db.Date
  OrdinationTemple  String?   @db.VarChar(50)
  OrdinationDate    DateTime? @db.Date
  ResidentialTemple String?   @db.VarChar(50)
  RefugueMaster     String?   @db.VarChar(50)
  RefugueDate       DateTime? @db.Date
  Referrer          String?   @db.VarChar(50)
  ClothType         Int?      @db.TinyInt
  ClothSize         String?   @db.VarChar(4)
  EmergencyName     String?   @db.VarChar(50)
  EmergencyPhone    String?   @db.VarChar(20)
  Relationship      String?   @db.VarChar(20)
  Expertise         Json?
  Education         String?   @db.VarChar(500)
  ComeTempleReason  String?   @db.VarChar(500)
  HealthStatus      Json?
  EatBreakfast      Boolean   @default(false)
  EatLunch          Boolean   @default(false)
  EatDinner         Boolean   @default(false)
  Address           Json?
  Remarks           String?   @db.VarChar(255)
  UpdateAt          DateTime  @default(now()) @db.DateTime(0)

  @@index([DharmaName], map: "idx_users_DharmaName")
  @@index([MageNickname], map: "idx_users_MageNickname")
  @@index([Mobile], map: "idx_users_Mobile")
  @@index([Name], map: "idx_users_Name")
}

model buddha_seven_periods {
  Id             Int      @id @default(autoincrement()) @db.UnsignedSmallInt
  StartSevenDate DateTime @db.Date
  CompleteDate   DateTime @db.Date
  Remarks        String?  @db.VarChar(32)
}

model item_name_mapping {
  Id        Int     @id @default(autoincrement())
  GroupName String? @db.VarChar(20)
  ItemId    Int?    @db.SmallInt
  ItemValue String? @db.VarChar(20)

  @@unique([GroupName, ItemId], map: "idx_item_name_mapping_GroupName_ItemId")
  @@index([GroupName], map: "idx_item_name_mapping_GroupName")
}

model room_permanent_items {
  Id         Int      @id @default(autoincrement())
  RoomId     Int
  CategoryId Int?     @db.SmallInt
  ItemsName  String?  @db.VarChar(50)
  Quantity   Int?     @db.SmallInt
  IsActive   Boolean?
  Remarks    String?  @db.VarChar(255)
}

model rooms {
  Id              Int      @id @unique(map: "Id_UNIQUE")
  DormitoryAreaId Int      @db.TinyInt
  BuildingId      Int      @db.TinyInt
  ShareId         Int      @db.TinyInt
  RoomType        Int      @db.TinyInt
  IsMale          Boolean  @default(true)
  TotalBeds       Int      @default(2) @db.TinyInt
  ReservedBeds    Int      @default(0) @db.TinyInt
  IsActive        Boolean  @default(true)
  UpdateAt        DateTime @default(now()) @db.DateTime(0)

  @@index([DormitoryAreaId, BuildingId, IsActive], map: "idx_rooms_DormitoryAreaId_BuildingId_IsActive")
}

model user_auth_qr_codes {
  Id              Int       @id @default(autoincrement())
  UserId          Int       @db.UnsignedInt
  DeaconId        Int       @db.SmallInt
  QRCode          String?   @unique(map: "idx_user_auth_qr_codes_QRCode") @db.VarChar(64)
  EndTime         DateTime? @db.DateTime(0)
  AuthorizeUserId Int       @db.UnsignedInt
  HasUsed         Boolean?  @default(false)

  @@unique([QRCode, EndTime, HasUsed], map: "idx_user_auth_qr_codes_QRCode_EndTime_HasUsed")
  @@index([DeaconId, UserId], map: "idx_user_auth_qr_codes_DeaconId_UserId")
}

model user_authorizes {
  UserId          Int       @id @db.UnsignedInt
  DeaconId        Int?      @db.SmallInt
  AuthorizeUserId Int?      @db.UnsignedInt
  AuthorizeDate   DateTime? @db.Date
}

model user_benefits {
  Id           Int      @id @default(autoincrement())
  UserId       Int      @db.UnsignedInt
  BenefitType  Int      @db.SmallInt
  OfferingDate DateTime @db.Date
  TabletType   Int?     @db.SmallInt
  TabletName   String?  @db.VarChar(50)

  @@index([UserId], map: "idx_user_benefit_UserId")
}

model user_blacklist {
  UserId Int @id @db.UnsignedInt
}

model user_buddha_seven_records {
  Id                  Int @id @default(autoincrement())
  UserId              Int @db.UnsignedInt
  BuddhaSevenPeriodId Int @db.SmallInt

  @@index([UserId], map: "idx_user_buddha_seven_records_UserId")
}

model user_deacon_churchs {
  Id         Int       @id @default(autoincrement())
  UserId     Int       @db.UnsignedInt
  ChurchId   Int?      @db.SmallInt
  DeaconId   Int?      @db.SmallInt
  DeaconArea Int?      @db.SmallInt
  ChurchUnit Int?      @db.SmallInt
  ChurchDept Int?      @db.SmallInt
  StartDate  DateTime? @db.Date
  EndDate    DateTime? @db.Date

  @@index([UserId], map: "idx_user_deacon_churchs_UserId")
  @@index([UserId, StartDate, EndDate], map: "idx_user_deacon_churchs_UserId_StartDate_EndDate")
}

model user_family_relationships {
  Id              Int     @id @default(autoincrement())
  MasterUserId    Int     @unique(map: "MasterUserId_UNIQUE") @db.UnsignedInt
  SlaveUserId     Int     @unique(map: "SlaveUserId_UNIQUE") @db.UnsignedInt
  Relationship    String  @db.VarChar(20)
  IsLiving        Boolean @default(true)
  DonglinIdentity Int     @db.TinyInt
  Remarks         String? @db.VarChar(255)

  @@index([MasterUserId], map: "idx_user_family_relationships_MasterUserId")
}

model buddha_seven_apply {
  Id                   Int       @id @default(autoincrement())
  UserId               Int       @db.UnsignedInt
  RoomId               Int?
  BedStayOrderNumber   Int?
  CheckInDate          DateTime? @db.Date
  CheckOutDate         DateTime? @db.Date
  CheckInDateBreakfast Boolean?  @default(false)
  CheckInDateLunch     Boolean?  @default(false)
  CheckInDateDinner    Boolean?  @default(false)
  CheckInTime          DateTime? @db.Time(0)
  CheckInUserId        Int?      @db.UnsignedInt
  Status               String?   @db.VarChar(20)
  Remarks              String?   @db.VarChar(255)
  UpdateUserId         Int?      @db.UnsignedInt
  UpdateAt             DateTime? @default(now()) @db.DateTime(0)

  @@index([CheckInDate, CheckOutDate, RoomId], map: "idx_buddha_seven_apply_CheckInDate_CheckOutDate_RoomId")
  @@index([UserId], map: "idx_buddha_seven_apply_UserId")
}

model user_auth_permissions {
  UserId              Int     @id @db.UnsignedInt
  IsSystemAdmin       Boolean @default(false)
  HasBuddhaSevenApply Boolean @default(false)
  HasRefugeApply      Boolean @default(false)
  HasVisitAndActive   Boolean @default(false)
  HasRoomApply        Boolean @default(false)
  HasRoomInfo         Boolean @default(false)
  HasArrangeService   Boolean @default(false)
}

model deacon_define_permissions {
  Id                  Int     @id @db.TinyInt
  IsSystemAdmin       Boolean @default(false)
  HasBuddhaSevenApply Boolean @default(false)
  HasRefugeApply      Boolean @default(false)
  HasVisitAndActive   Boolean @default(false)
  HasRoomApply        Boolean @default(false)
  HasRoomInfo         Boolean @default(false)
  HasArrangeService   Boolean @default(false)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view room_building_list {
  BuildingId   Int     @unique @db.SmallInt
  BuildingName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view room_dormitory_area_list {
  DormitoryAreaId   Int     @unique @db.SmallInt
  DormitoryAreaName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view room_type_list {
  RoomType     Int     @unique @db.SmallInt
  RoomTypeName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view rooms_dormitory_area_building_list {
  Id                BigInt  @unique @default(0)
  DormitoryAreaId   Int     @db.TinyInt
  DormitoryAreaName String? @db.VarChar(20)
  BuildingId        Int     @db.TinyInt
  BuildingName      String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view rooms_view {
  RoomId            Int      @unique
  DormitoryAreaId   Int      @db.TinyInt
  DormitoryAreaName String?  @db.VarChar(20)
  BuildingId        Int      @db.TinyInt
  BuildingName      String?  @db.VarChar(20)
  ShareId           Int      @db.TinyInt
  RoomType          Int      @db.TinyInt
  RoomTypeName      String?  @db.VarChar(20)
  IsMale            Boolean  @default(true)
  GenderName        String   @default("") @db.VarChar(1)
  TotalBeds         Int      @default(2) @db.TinyInt
  ReservedBeds      Int      @default(0) @db.TinyInt
  IsActive          Boolean  @default(true)
  UpdateAt          DateTime @default(now()) @db.DateTime(0)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_church_dept_list {
  ChurchDept     Int     @unique @db.SmallInt
  ChurchDeptName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_church_name_list {
  ChurchId   Int     @unique @db.SmallInt
  ChurchName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_church_unit_list {
  ChurchUnit     Int     @unique @db.SmallInt
  ChurchUnitName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_deacon_area_list {
  DeaconArea     Int     @unique @db.SmallInt
  DeaconAreaName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_deacon_churchs_view {
  Id             Int       @unique @default(0)
  UserId         Int       @db.UnsignedInt
  ChurchName     String?   @db.VarChar(20)
  DeaconName     String?   @db.VarChar(20)
  DeaconAreaName String?   @db.VarChar(20)
  ChurchUnitName String?   @db.VarChar(20)
  ChurchDeptName String?   @db.VarChar(20)
  StartDate      DateTime? @db.Date
  EndDate        DateTime? @db.Date
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_deacon_name_list {
  DeaconId   Int     @unique @db.SmallInt
  DeaconName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view user_stay_identity_list {
  StayIdentity     Int     @unique @db.SmallInt
  StayIdentityName String? @db.VarChar(20)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
view buddha_seven_apply_view {
  Id                    Int       @unique @default(0)
  UserId                Int       @db.UnsignedInt
  Name                  String?   @db.VarChar(50)
  DharmaName            String?   @db.VarChar(50)
  IsMonk                Boolean?  @default(false)
  IsMale                Boolean?  @default(true)
  Mobile                String?   @db.VarChar(20)
  Phone                 String?   @db.VarChar(20)
  RoomId                Int?
  BedStayOrderNumber    Int?
  CheckInDate           DateTime? @db.Date
  CheckOutDate          DateTime? @db.Date
  CheckInDateBreakfast  Boolean?  @default(false)
  CheckInDateLunch      Boolean?  @default(false)
  CheckInDateDinner     Boolean?  @default(false)
  CheckInTime           DateTime? @db.Time(0)
  CheckInUserId         Int?      @db.UnsignedInt
  CheckInUserName       String?   @db.VarChar(50)
  CheckInUserDharmaName String?   @db.VarChar(50)
  CheckInUserIsMale     Boolean?  @default(true)
  Status                String?   @db.VarChar(20)
  Remarks               String?   @db.VarChar(255)
  UpdateUserId          Int?      @db.UnsignedInt
  UpdateUserName        String?   @db.VarChar(50)
  UpdateUserDharmaName  String?   @db.VarChar(50)
  UpdateUserIsMale      Boolean?  @default(false)
  UpdateAt              DateTime? @default(now()) @db.DateTime(0)
}
